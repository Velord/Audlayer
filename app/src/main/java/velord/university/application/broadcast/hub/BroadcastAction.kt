package velord.university.application.broadcast.hub

object BroadcastAction {
    //miniPlayer
    const val stopService = "velord.university.STOP"
    const val stopUI = "velord.university.STOP_UI"
    const val playService = "velord.university.PlAY"
    const val playUI ="velord.university.PlAY_UI"
    const val likeService = "velord.university.LIKE"
    const val likeUI = "velord.university.LIKE_UI"
    const val unlikeService = "velord.university.UNLIKE"
    const val unlikeUI = "velord.university.UNLIKE_UI"
    const val skipNextService = "velord.university.SKIP_NEXT"
    const val skipNextUI = "velord.university.SKIP_NEXT_UI"
    const val skipPrevService = "velord.university.SKIP_PREV"
    const val skipPrevUI = "velord.university.SKIP_PREV_UI"
    const val rewindService = "velord.university.REWIND"
    const val rewindUI = "velord.university.REWIND_UI"
    const val shuffleService = "velord.university.SHUFFLE"
    const val shuffleUI = "velord.university.SHUFFLE_UI"
    const val unShuffleService = "velord.university.UN_SHUFFLE"
    const val unShuffleUI = "velord.university.UN_SHUFFLE_UI"
    const val loopService = "velord.university.LOOP"
    const val loopUI = "velord.university.LOOP_UI"
    const val loopAllService = "velord.university.LOOP_ALL"
    const val loopAllUI = "velord.university.LOOP_ALL_UI"
    const val notLoopService = "velord.university.NOT_LOOP"
    const val notLoopUI = "velord.university.NOT_LOOP_UI"
    const val playByPathService = "velord.university.PLAY_BY_PATH"
    const val playByPathUI = "velord.university.SONG_PATH_UI"
    const val songArtistUI = "velord.university.SONG_ARTIST_UI"
    const val songNameUI = "velord.university.SONG_NAME_UI"
    const val songHQUI = "velord.university.SONG_HQ_UI"
    const val songDurationUI = "velord.university.SONG_DURATION_UI"
    const val showMiniPlayerUI = "velord.university.SHOW_MINI_PLAYER_UI"
    const val hideMiniPlayerUI = "velord.university.HIDE_MINI_PLAYER_UI"
    const val playAllInFolderService = "velord.university.PLAY_ALL_IN_FOLDER"
    const val playNextAllInFolderService = "velord.university.PLAY_NEXT_ALL_IN_FOLDER"
    const val shuffleAndPlayAllInFolderService = "velord.university.SHUFFLE_AND_PLAY_ALL_IN_FOLDER"
    const val addToQueueService = "velord.university.ADD_TO_QUEUE"
    const val getInfoService = "velord.university.GET_INFO"
    const val songPathIsWrongUI = "velord.university.SONG_PATH_IS_WRONG_UI"
    const val playOrStopService = "velord.university.PLAY_OR_STOP"
    const val iconUI = "velord.university.ICON_UI"
    const val playerUnavailableUI = "velord.university.PLAYER_UNAVAILABLE"
    const val clickOnIcon = "velord.university.CLICK_ON_ICON"
    //radio
    const val stopRadioService = "velord.university.STOP_RADIO"
    const val stopRadioUI = "velord.university.STOP_RADIO_UI"
    const val playRadioService = "velord.university.PlAY_RADIO"
    const val playRadioUI ="velord.university.PlAY_RADIO_UI"
    const val likeRadioService = "velord.university.LIKE_RADIO"
    const val likeRadioUI = "velord.university.LIKE_RADIO_UI"
    const val unlikeRadioService = "velord.university.UNLIKE_RADIO"
    const val unlikeRadioUI = "velord.university.UNLIKE_RADIO_UI"
    const val playOrStopRadioService = "velord.university.PLAY_OR_STOP_RADIO"
    const val playByUrlRadioService = "velord.university.PLAY_BY_URL_RADIO"
    const val playByUrlRadioUI = "velord.university.PLAY_BY_URL_RADIO_UI"
    const val getInfoRadioService = "velord.university.GET_INFO_RADIO"
    const val radioArtistUI = "velord.university.RADIO_ARTIST_UI"
    const val radioNameUI = "velord.university.RADIO_NAME_UI"
    const val showMiniPlayerRadioUI = "velord.university.RADIO_SHOW_UI"
    const val hideMiniPlayerRadioUI = "velord.university.RADIO_HIDE_UI"
    const val iconRadioUI = "velord.university.ICON_RADIO_UI"
    const val radioPlayerUnavailableUI = "velord.university.RADIO_PLAYER_UNAVAILABLE"
    const val clickOnRadioIcon = "velord.university.CLICK_ON_RADIO_ICON"
    const val radioUrlIsWrongUI = "velord.university.RADIO_URL_IS_WRONG_UI"

}